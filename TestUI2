range = 10
toggleAuto = false
toggleReach = false

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "G1oober's UI", HidePremium = true, SaveConfig = false, IntroText = "Welcome!"})

local MainTab = Window:MakeTab({
	Name = "MainTab",
	Icon = nil,
	PremiumOnly = false
})

local Section = MainTab:AddSection({
	Name = "Sword Stuff"
})

MainTab:AddToggle({
	Name = "AutoBot Sword",
	Default = false,
	Callback = function(Value)
		toggleAuto = (Value)
	end    
})

MainTab:AddToggle({
	Name = "AutoBot Sword",
	Default = false,
	Callback = function(Value)
		toggleReach = (Value)
	end    
})

MainTab:AddSlider({
	Name = "Sword Reach",
	Min = 0,
	Max = 30,
	Default = 10,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Studs",
	Callback = function(Value)
		range = (Value)
	end    
})



-----------------------------------------------
---------        SCRIPT        ----------------
-----------------------------------------------

--// Variable \--
local player = game:GetService("Players").LocalPlayer

game:GetService("RunService").RenderStepped:Connect(function()
    local p = game.Players:GetPlayers()
    for i = 2, #p do local v = p[i].Character
        if v and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and player:DistanceFromCharacter(v.HumanoidRootPart.Position) <= range then
            local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
            if tool and tool:FindFirstChild("Handle") and toggleReach then
                tool:Activate()
                for i,v in next, v:GetChildren() do
                    if v:IsA("BasePart") then
                        firetouchinterest(tool.Handle,v,0)
                        firetouchinterest(tool.Handle,v,1)
                    end
                end
            end
        end
    end
end)


-- Get the local player
local localPlayer = game:GetService("Players").LocalPlayer

local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge
    --for loop going through all players in server
    for i, v in pairs(game:GetService("Players"):GetPlayers()) do
        --If the player is not the local player
        if v.Name ~= localPlayer.Name then
            if --if the player has a head, humanoid and health is greater than 0
                v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health > 0 and
                    v.Character:FindFirstChild("HumanoidRootPart") and
                    v.Character:FindFirstChild("Head")
             then --if the player has a forcefield
                if v.Character:FindFirstChildOfClass("ForceField") then
                else --else (if the player doesnt have a forcefield)
                    --Create a ray from the players humanoid to very low center of world
                    local ray =
                        Ray.new(v.Character:FindFirstChild("HumanoidRootPart").Position, Vector3.new(0, -100000, 0))
                    local Hit = game:GetService("Workspace"):FindPartOnRay(ray, v.Character)
                    --Set hit to the basepart of the player character on the ray
                    if Hit then --if hit is not null, and player is on ray
                        local magnitude =
                            (v.Character.HumanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).magnitude
                        --get distance between localplayer and player
                        --if the distance is less than the shortest distance
                        if magnitude < shortestDistance then
                            closestPlayer = v --set closest player to currentPlayer
                            shortestDistance = magnitude --set shortest distance to new distance
                        end
                    end
                end
            end
        end
    end
    return closestPlayer
end

local stateType = Enum.HumanoidStateType

local character = game.Players.LocalPlayer.Character
local humanoid = character:WaitForChild("Humanoid")

humanoid:SetStateEnabled(stateType.FallingDown, false)
humanoid:SetStateEnabled(stateType.Ragdoll, false)

while true do
    wait()
    spawn(
        function()
            local test = getClosestPlayer()
            if --if local player and closestPlayer are not null and toggle is on
                game:GetService("Players").LocalPlayer.Character.PrimaryPart and getClosestPlayer() ~= nil and
                    toggleAuto == true
             then
                local TargetPart = getClosestPlayer().Character.HumanoidRootPart
                local Part = game.Players.LocalPlayer.Character.HumanoidRootPart
                local RotateX, RotateY, RotateZ = 0, 0, 0
                
                --CFrame.new(pos: Vector3, lookat: Vector3)
                --This creates a new CFrame for position at localplayer, and look at target
                Part.CFrame =
                    CFrame.new(Part.Position, TargetPart.Position) *
                    CFrame.Angles(math.rad(0), math.rad(25), math.rad(0))
                --Multiplies by CFrame.Angles to add sword offset

                game:GetService("Players").LocalPlayer.Character.Humanoid:MoveTo(
                    getClosestPlayer().Character.HumanoidRootPart.CFrame * Vector3.new(-3, 0, 0)
                )
                if getClosestPlayer().Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
                    game.Players.LocalPlayer.Character.Humanoid.Jump = true
                end
            end
        end
    )
end



OrionLib:Init()

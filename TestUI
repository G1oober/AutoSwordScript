_G toggleAuto = false

local UILib = loadstring(game:HttpGet("https://raw.githubusercontent.com/BatuKvi123/PabloLibV3/main/PabloLibV3"))()
local window = UILib:Create(
"Sword Script", -- BeStHaXYT UI
"Enabled", -- If you want draggable set here to "Enabled" if you dont want set to "Disabled".
"p" -- You can put any keybind here to open close.
)

---Tabs---

local tab1 = window:CreateTab("Sword Bot Script")


---buttons---
tab1:CreateToggle("Toggle", function(state)
if state then
  print("Enabled!")
  toggleAuto = true
else
  print("Disabled!")
  toggleAuto = false
end)

---WARNING---

tab1:CreateWarning("Warning")

-- Get the local player
local localPlayer = game:GetService("Players").LocalPlayer

local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge
    --for loop going through all players in server
    for i, v in pairs(game:GetService("Players"):GetPlayers()) do
        --If the player is not the local player
        if v.Name ~= localPlayer.Name then
            if --if the player has a head, humanoid and health is greater than 0
                v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health > 0 and
                    v.Character:FindFirstChild("HumanoidRootPart") and
                    v.Character:FindFirstChild("Head")
             then --if the player has a forcefield
                if v.Character:FindFirstChildOfClass("ForceField") then
                else --else (if the player doesnt have a forcefield)
                    --Create a ray from the players humanoid to very low center of world
                    local ray =
                        Ray.new(v.Character:FindFirstChild("HumanoidRootPart").Position, Vector3.new(0, -100000, 0))
                    local Hit = game:GetService("Workspace"):FindPartOnRay(ray, v.Character)
                    --Set hit to the basepart of the player character on the ray
                    if Hit then --if hit is not null, and player is on ray
                        local magnitude =
                            (v.Character.HumanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).magnitude
                        --get distance between localplayer and player
                        --if the distance is less than the shortest distance
                        if magnitude < shortestDistance then
                            closestPlayer = v --set closest player to currentPlayer
                            shortestDistance = magnitude --set shortest distance to new distance
                        end
                    end
                end
            end
        end
    end
    return closestPlayer
end

range = 0
toggleSword = false

local PabloLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/BatuKvi123/PabloLibV3/main/PabloLibV3"))()
local window = PabloLib:Create(
"G1oober UI",
"Enabled", -- If you want draggable set here to "Enabled" if you dont want set to "Disabled".
"p" -- You can put any keybind here to open close.
)

---Tabs---
local tab1 = window:CreateTab("G1oober's Sword Script")

---buttons---
tab1:CreateButton("TestButton", function()
toggleSword = not toggleSword
end)

tab1:CreateTextbox("Change Reach Range", function(a)
range = a
print(a)
end)

---WARNING---
tab1:CreateWarning("Warning")

-----------------------------------------------
---------        SCRIPT        ----------------
-----------------------------------------------

--RunService.RenderedStepped runs the function every frame, basically more efficient while loop
game:GetService("RunService").RenderStepped:Connect(
    function()
        if autoSword == true then
            spawn( --spawn starts a coroutine to run other things while this is running
                function()
                    --find the first tool (equippable) in the local players backpack
                    local tool =
                        game.Players.LocalPlayer.Character and
                        game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
                    --if tool is not null and it has a handle meaning it needs to be equipped to use
                    if tool and tool:FindFirstChild("Handle") then
                        --simulates a click with the tool
                        tool:Activate()
                        
                        -- Get a list of the current players
                        local p = game.Players:GetPlayers()
                        
                        --Loop through the list of players 2, 3, 4, ...
                        for i = 2, #p do
                            local v = p[i].Character
                            if  -- if the player has a humanoid and health is above 0 and distance between you and player is less than range
                                v and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and
                                    v:FindFirstChild("HumanoidRootPart") and
                                    game.Players.LocalPlayer:DistanceFromCharacter(v.HumanoidRootPart.Position) <= range
                             then
                                for i, v in next, v:GetChildren() do
                                    if v:IsA("BasePart") then
                                        --firtouchinterest is a function made by Synapse X
                                        --Used to create fake touch events between two objects
                                        --makes sword touch the player 0 - off 1 - on
                                        firetouchinterest(tool.Handle, v, 0)
                                        firetouchinterest(tool.Handle, v, 1)
                                    end
                                end
                            end
                        end
                    end
                end
            )
        end
    end
)


-- Get the local player
local localPlayer = game:GetService("Players").LocalPlayer

local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge
    --for loop going through all players in server
    for i, v in pairs(game:GetService("Players"):GetPlayers()) do
        --If the player is not the local player
        if v.Name ~= localPlayer.Name then
            if --if the player has a head, humanoid and health is greater than 0
                v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health > 0 and
                    v.Character:FindFirstChild("HumanoidRootPart") and
                    v.Character:FindFirstChild("Head")
             then --if the player has a forcefield
                if v.Character:FindFirstChildOfClass("ForceField") then
                else --else (if the player doesnt have a forcefield)
                    --Create a ray from the players humanoid to very low center of world
                    local ray =
                        Ray.new(v.Character:FindFirstChild("HumanoidRootPart").Position, Vector3.new(0, -100000, 0))
                    local Hit = game:GetService("Workspace"):FindPartOnRay(ray, v.Character)
                    --Set hit to the basepart of the player character on the ray
                    if Hit then --if hit is not null, and player is on ray
                        local magnitude =
                            (v.Character.HumanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).magnitude
                        --get distance between localplayer and player
                        --if the distance is less than the shortest distance
                        if magnitude < shortestDistance then
                            closestPlayer = v --set closest player to currentPlayer
                            shortestDistance = magnitude --set shortest distance to new distance
                        end
                    end
                end
            end
        end
    end
    return closestPlayer
end

local stateType = Enum.HumanoidStateType

local character = game.Players.LocalPlayer.Character
local humanoid = character:WaitForChild("Humanoid")

humanoid:SetStateEnabled(stateType.FallingDown, false)
humanoid:SetStateEnabled(stateType.Ragdoll, false)

while true do
    wait()
    spawn(
        function()
            local test = getClosestPlayer()
            if --if local player and closestPlayer are not null and toggle is on
                game:GetService("Players").LocalPlayer.Character.PrimaryPart and getClosestPlayer() ~= nil and
                    toggleSword == true
             then
                local TargetPart = getClosestPlayer().Character.HumanoidRootPart
                local Part = game.Players.LocalPlayer.Character.HumanoidRootPart
                local RotateX, RotateY, RotateZ = 0, 0, 0
                
                --CFrame.new(pos: Vector3, lookat: Vector3)
                --This creates a new CFrame for position at localplayer, and look at target
                Part.CFrame =
                    CFrame.new(Part.Position, TargetPart.Position) *
                    CFrame.Angles(math.rad(0), math.rad(25), math.rad(0))
                --Multiplies by CFrame.Angles to add sword offset

                game:GetService("Players").LocalPlayer.Character.Humanoid:MoveTo(
                    getClosestPlayer().Character.HumanoidRootPart.CFrame * Vector3.new(-3, 0, 0)
                )
                if getClosestPlayer().Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
                    game.Players.LocalPlayer.Character.Humanoid.Jump = true
                end
            end
        end
    )
end
